#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// Prototypes to avoid warnings
int _putchar(char c);
int _islower(int c);
int _isalpha(int c);
int _abs(int n);
int _isupper(int c);
int _isdigit(int c);
int _strlen(char *s);
void _puts(char *s);
char *_strcpy(char *dest, char *src);
int _atoi(char *s);
char *_strcat(char *dest, char *src);
char *_strncat(char *dest, char *src, int n);
char *_strncpy(char *dest, char *src, int n);
int _strcmp(char *s1, char *s2);
char *_memset(char *s, char b, unsigned int n);
char *_memcpy(char *dest, char *src, unsigned int n);
char *_strchr(char *s, char c);
unsigned int _strspn(char *s, char *accept);
char *_strpbrk(char *s, char *accept);
char *_strstr(char *haystack, char *needle);

// Implementations of the functions
int _putchar(char c) {
    return putchar(c);
}

int _islower(int c) {
    return c >= 'a' && c <= 'z';
}

int _isalpha(int c) {
    return (_islower(c) || _isupper(c));
}

int _abs(int n) {
    return n < 0 ? -n : n;
}

int _isupper(int c) {
    return c >= 'A' && c <= 'Z';
}

int _isdigit(int c) {
    return c >= '0' && c <= '9';
}

int _strlen(char *s) {
    int len = 0;
    while (*s) {
        len++;
        s++;
    }
    return len;
}

void _puts(char *s) {
    while (*s) {
        putchar(*s);
        s++;
    }
    putchar('\n');
}

char *_strcpy(char *dest, char *src) {
    char *temp = dest;
    while (*src) {
        *dest++ = *src++;
    }
    *dest = '\0';
    return temp;
}

int _atoi(char *s) {
    int sign = 1, value = 0;
    while (*s && (*s == ' ' || *s == '\n' || *s == '\t' || *s == '\v' || *s == '\f' || *s == '\r')) {
        s++;
    }
    if (*s == '-') {
        sign = -1;
        s++;
    } else if (*s == '+') {
        s++;
    }
    while (*s && _isdigit(*s)) {
        value = value * 10 + (*s - '0');
        s++;
    }
    return value * sign;
}

char *_strcat(char *dest, char *src) {
    char *temp = dest;
    while (*dest) {
        dest++;
    }
    while (*src) {
        *dest++ = *src++;
    }
    *dest = '\0';
    return temp;
}

char *_strncat(char *dest, char *src, int n) {
    char *temp = dest;
    while (*dest) {
        dest++;
    }
    while (*src && n > 0) {
        *dest++ = *src++;
        n--;
    }
    *dest = '\0';
    return temp;
}

char *_strncpy(char *dest, char *src, int n) {
    char *temp = dest;
    int i;
    for (i = 0; i < n && *src; i++) {
        *dest++ = *src++;
    }
    for (; i < n; i++) {
        *dest++ = '\0';
    }
    return temp;
}

int _strcmp(char *s1, char *s2) {
    while (*s1 && *s2 && *s1 == *s2) {
        s1++;
        s2++;
    }
